{"version":3,"file":"static/js/26.3bbdf603.chunk.js","mappings":"67HA4DO,MAAMA,EAAa,yBAGbC,EAAYC,MACrBC,EACAC,EACAC,KAEA,MAAMC,EAAS,CACXC,OAAQP,EACRQ,IAAK,MACFL,GAEP,IAAIM,EAAa,CACb,eAAgB,sBACbN,EAAQO,SAEf,IACI,MAAMC,QAAiBC,MAAMN,EAAOC,OAASD,EAAOE,IAAK,CACrDK,OAAQ,OACRH,QAASD,EACTK,MAAO,WACPC,OAAQT,EAAOS,OACfC,KAAMC,KAAKC,UAAUd,KAEzB,IAAKO,EAASQ,GACV,MAAM,IAAIC,MAAM,+BAEpB,MAAMC,QAAaV,EAASU,OAE5B,IAEI,OADeJ,KAAKK,MAAMD,EAE9B,CAAE,MAAOE,GAEL,OAAOF,CACX,CACJ,CAAE,MAAOG,GACL,CAEH,QACiB,OAAVnB,QAAU,IAAVA,GAAAA,EAAYoB,WAAWpB,EAAWoB,WAC1C,GAGSC,EAAWxB,MACpBC,EACAC,EACAC,KAEA,MAAMC,EAAS,CAEXC,OAAQP,EACRQ,IAAK,MACFL,GAEP,IAAIM,EAAa,IACVN,EAAQO,SAEf,IACI,MAAMC,QAAiBC,MAAMN,EAAOC,OAASD,EAAOE,IAAM,IAjGtCmB,KACxB,MAAMC,EAAeC,OAAOC,KAAKH,GAC5BI,OACAC,QAAO,CAACC,EAAaC,KAClBD,EAAOC,GAAOP,EAAOO,GACdD,IACR,CAAC,GAKR,OAHoBJ,OAAOC,KAAKF,GAC3BO,KAAKD,GAAQ,GAAGA,KAAON,EAAaM,OACpCE,KAAK,IACQ,EAsFkDC,CAAYjC,GAAQ,CAChFS,OAAQ,MACRH,QAASD,EACTK,MAAO,WACPC,OAAQT,EAAOS,SAGnB,IAAKJ,EAASQ,GACV,MAAM,IAAIC,MAAM,+BAEpB,MAAMC,QAAaV,EAASU,OAE5B,IAEI,OADeJ,KAAKK,MAAMD,EAE9B,CAAE,MAAOE,GACL,OAAOF,CACX,CACJ,CAAE,MAAOG,GACS,OAAVnB,QAAU,IAAVA,GAAAA,EAAYiC,SAASjC,EAAWiC,SAExC,CAAC,QACiB,OAAVjC,QAAU,IAAVA,GAAAA,EAAYoB,WAAWpB,EAAWoB,WAC1C,G,aCvIJ,MAsEA,EAtEgEc,IAGzD,IAH0D,cAC/DC,EAAa,OACbC,GACDF,EACC,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,GAEnCC,EAAc,IAEpBC,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAUJ,OARIL,EAAWF,EACbO,EAAaC,aAAY,KACvBL,GAAaM,GAAiBA,EAAeC,IAAwB,GARlD,KAWrBC,cAAcJ,GAGT,IAAMI,cAAcJ,EAAW,GACrC,CAACL,EAAUF,IAGd,MAAMY,EAAcV,EAAWF,EAAiB,IAG1Ca,EAAgB,EAAIC,KAAKC,GAAKd,EAC9Be,EAASH,EAAiBD,EAAa,IAAOC,EAEpD,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OACEC,UAAU,wBACVE,MAAgB,EAATnB,EAAaI,EACpBgB,OAAiB,EAATpB,EAAaI,EACrBiB,QAAS,OAAgB,EAATrB,EAAaI,KAAwB,EAATJ,EAAaI,IAAec,SAAA,EAExEI,EAAAA,EAAAA,KAAA,UACEC,GAAIvB,EAASI,EACboB,GAAIxB,EAASI,EACbqB,EAAGzB,EACH0B,KAAK,OACLtB,YAAaA,EACbuB,OAAQhB,GAAc,GAAK,UAAY,aAEzCW,EAAAA,EAAAA,KAAA,UACEC,GAAIvB,EAASI,EACboB,GAAIxB,EAASI,EACbqB,EAAGzB,EACH0B,KAAK,OACLtB,YAAaA,EACbuB,OAA4B,UAC5BC,gBAAiBhB,EACjBiB,iBAAkBd,EAClBe,UAAW,cAAc9B,EAASI,KAChCJ,EAASI,KAEX2B,MAAO,CAAEC,WAAY,uCAGzBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYC,SAAC,wBAC5BI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcC,SAC1BL,KAAKoB,KAAKlC,EAAgBE,UAG3B,E,sBCvEV,MAgCA,EAhCiBH,IAAwC,IAAvC,OAAEoC,EAAM,QAAEC,EAAO,QAAEC,GAActC,EAUjD,IATAO,EAAAA,EAAAA,YAAU,KAGNgC,SAAS9D,KAAKwD,MAAMO,SADlBJ,EAC6B,SAEA,MACjC,GACC,CAACA,KAECA,EACH,OAAO,KAQT,OAAOK,EAAAA,cACLjB,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iBAAiBuB,QALNC,KAC1BN,GAAS,EAIoDjB,UAC3DI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,QAAQuB,QAAUE,GAAMA,EAAEC,kBAAkBzB,UACzDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BI,EAAAA,EAAAA,KAAA,KAAAJ,SAAIkB,KACJd,EAAAA,EAAAA,KAAA,UAAQkB,QAASL,EAAQjB,SAAC,wBAIhCmB,SAAS9D,KACV,ECvBGqE,EAAeC,EAsPrB,EArPkBC,IAChB,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,KACjBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBnD,EAAAA,EAAAA,UAAS,KACtCoD,EAAeC,IAAoBrD,EAAAA,EAAAA,UAAS,KAC5CsD,EAAaC,IAAkBvD,EAAAA,EAAAA,UAAS,IACxCwD,EAAcC,IAAmBzD,EAAAA,EAAAA,UAAS,IAC1C0D,EAAUC,IAAe3D,EAAAA,EAAAA,UAAS,IAClC4D,EAAgBC,IAAqB7D,EAAAA,EAAAA,UAAS,IAC9C8D,EAAaC,IAAgB/D,EAAAA,EAAAA,WAAS,IACtCgE,EAAeC,IAAoBjE,EAAAA,EAAAA,UAAS,IA+JnD,OApHAE,EAAAA,EAAAA,YAAU,KACR,IAAK,MAAMgE,KAAUzB,EACnB,GAAIxD,OAAOkF,UAAUC,eAAeC,KAAK5B,EAAcyB,GAAS,CAC9D,MAAMI,EAAU7B,EAAayB,GACf,OAAVtB,QAAU,IAAVA,GAAAA,EAAY2B,SAASD,EAAQE,MAC/BrB,EAAcmB,EAAQG,SACtBpB,EAAiBiB,EAAQI,OACzBnB,EAAee,EAAQE,IAE3B,CACF,GACC,CAAC5B,KACJ1C,EAAAA,EAAAA,YAAU,KAER,IAAIyE,EADgB,IAAIC,gBAAgB5B,EAAS6B,QACjBC,IAAI,SAAW,GAC1CH,GAAmC,KAAlBA,IACpBA,EAAgBI,aAAaC,QAAQL,GAAiB,IAExDV,EAAiBU,GACbA,GACFI,aAAaE,QAAQ,gBAAiBN,EACxC,GACC,CAAC3B,EAAS6B,UACb3E,EAAAA,EAAAA,YAAU,KACR,MAAMgF,EAAa,IAAIC,iBACjB,OAAEhH,GAAW+G,EACnB,IAAIE,EAAe,KA2BnB,OANI9B,EAAc,IAChB8B,EAAUhF,aAAY,KArBR9C,WACd,MAAM+H,QAAYvG,EAChB,CACEhB,QAAS,CAAEkG,cAAeA,GAC1BpG,IAAK,YACLO,OAAQA,GAEV,CAAEmH,WAAYhC,GACd,CACE5D,QAASA,SAGT2F,EAAM,IACR1B,EAAY0B,GACZ5B,EAAgB4B,GAChB9E,cAAc6E,GACdA,EAAU,KACZ,EAKEG,EAAS,GACR,MAGE,KACLL,EAAWM,QACPJ,GACF7E,cAAc6E,EAChB,CACD,GACA,CAACpB,EAAeV,KAEnBpD,EAAAA,EAAAA,YAAU,KACR,GAAIsD,EAAe,EAAG,CAEpB,MAAM0B,EAAa,IAAIC,gBAEjBC,EAAUK,YAAW,KACzBlF,cAAcJ,GACd2C,EAAS,UAAW,CAAE4C,MAAO,CAAEC,YAAa,+CAAc,GAC1C,IAAfnC,GAGGrD,EAAaC,aAAY,KAC7BuD,GAAaiC,GACPA,GAAgB,GAElBrF,cAAcJ,GACP,GAEFyF,EAAe,GACtB,GACD,KAGH,MAAO,KACLC,aAAaT,GACb7E,cAAcJ,GACd+E,EAAWM,OAAO,CAEtB,IACC,CAAC1C,EAAUU,KACdtD,EAAAA,EAAAA,YAAU,KACR,MAAMgF,EAAa,IAAIC,iBACjB,OAAEhH,GAAW+G,EAmBf5B,EAAc,GAAKE,EAAe,GAlBpBlG,WAChB,MACMwI,EADc,IAAIlB,gBAAgB5B,EAAS6B,QACXC,IAAI,aAAe,GACnDO,QAAYvG,EAChB,CACEhB,QAAS,CAAEkG,cAAeA,GAC1BpG,IAAK,cACLO,OAAQA,GAEV,CAAEmH,WAAYhC,EAAayC,SAAUD,GACrC,CACEpG,QAASA,SAGT2F,EAAM,GACRxB,EAAkBwB,EACpB,EAGAW,EACF,GACC,CAAChC,EAAeR,EAAcR,EAAS6B,OAAQvB,KAEhDzC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAYC,SAAA,CACzByC,EAAe,IACd3C,EAAAA,EAAAA,MAACoF,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBvE,WAAY,CAAE6B,SAAU,IACxB5C,UAAU,WAAUC,SAAA,EAEpBI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,YACfD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,sBAAqBC,UAClCI,EAAAA,EAAAA,KAACoF,EAAmB,CAClB3G,cAAe4D,EACf3D,OAAQ,QAIZgB,EAAAA,EAAAA,MAAA,WAASC,UAAU,mBAAkBC,SAAA,EACnCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,eAAcC,SAAA,CAAC,eAAGuC,MAC/BnC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,iBAAgBC,SAAEqC,QAEjCjC,EAAAA,EAAAA,KAAA,WAASL,UAAU,iBAAgBC,SAChCmC,EAAW3D,KAAI,CAACiH,EAAMC,KACrB5F,EAAAA,EAAAA,MAAA,OACEC,UACE8C,IAAmB6C,EAAQ,EACvB,yBACA,gBAGNpE,QAASA,KAxJF/E,WACrBuG,EAAkB9E,EAAO,EAwJT2H,CAAeD,EAAQ,EAAE,EACzB1F,SAAA,EAEFI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,aAAYC,SAAM,OAAJyF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,OACnCxF,EAAAA,EAAAA,KAAA,QAAML,UAAU,cAAaC,SAAM,OAAJyF,QAAI,IAAJA,OAAI,EAAJA,EAAMI,SANhCvI,KAAKC,UAAUkI,YAW5BrF,EAAAA,EAAAA,KAAA,OAAKL,UAAU,0BAAyBC,UACtCI,EAAAA,EAAAA,KAAA,UACEL,UACE8C,EAAiB,EAAI,yBAA2B,gBAElDvB,QA9LO/E,UACjB,IAAKsG,GAAkBA,GAAkB,EAEvC,YADAG,GAAa,GAGf,MACM+B,EADc,IAAIlB,gBAAgB5B,EAAS6B,QACXC,IAAI,aAAe,UACvCzH,EAChB,CACES,QAAS,CAAEkG,cAAeA,GAC1BpG,IAAK,oBAAoBkI,IACzB3H,OAAQY,EAAOZ,QAEjB,CAAEmH,WAAYhC,EAAauD,OAAQjD,GACnC,CACElE,QAASA,SAGboD,EAAS,UAAW,CAAE4C,MAAO,CAAEC,YAAa,mCAAY,EA4K1B5E,SACrB,sBAMNyC,GAAgB,IACf3C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBI,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAcC,UAC3BI,EAAAA,EAAAA,KAAA,OAAKkB,QAvNC/E,gBACID,EAChB,CACES,QAAS,CAAEkG,cAAeA,GAC1BpG,IAAK,SACLO,OAAQY,EAAOZ,QAEjBmF,EACA,CACE5D,QAASA,KACPoH,QAAQC,IAAI,cAAc,GAG/B,EA0M6BhG,SAAC,gCAEzBI,EAAAA,EAAAA,KAAA,KAAGL,UAAU,YAAWC,SAAC,wDAG5B+C,IACC3C,EAAAA,EAAAA,KAAC6F,EAAQ,CACPjF,OAAQ+B,EACR9B,QAASA,KACP+B,GAAa,EAAM,EAErB9B,QAAQ,6DAGP,C","sources":["utils/fetchRequest.ts","components/CircularProgressBar.tsx","components/MyDialog.tsx","views/Question.tsx"],"sourcesContent":["enum requestMethodEnum {\r\n    post = \"POST\",\r\n    get = \"GET \",\r\n    put = \"PUT\",\r\n    delete = \"DELETE \",\r\n}\r\n\r\nexport interface RequestConfigType {\r\n    method?: requestMethodEnum\r\n    domain: string;\r\n    url: string;\r\n    lng?: string;\r\n    headers: Record<string, string>;\r\n    signal?: AbortSignal | null | undefined\r\n}\r\n\r\nexport type ResponseHandlerType = {\r\n    onError?: (data?: any) => any;\r\n    onFinally?: (data?: any) => any;\r\n    messageApi?: any;\r\n    content?: string;\r\n};\r\n\r\nexport const paramsSting = (params: any) => {\r\n    const sortedParams = Object.keys(params)\r\n        .sort()\r\n        .reduce((result: any, key) => {\r\n            result[key] = params[key];\r\n            return result;\r\n        }, {});\r\n\r\n    const paramString = Object.keys(sortedParams)\r\n        .map((key) => `${key}=${sortedParams[key]}`)\r\n        .join(\"&\");\r\n    return paramString;\r\n};\r\n\r\n\r\n\r\nexport function getTimestampManager() {\r\n    let firstTimestamp: number | null = null;\r\n\r\n    function getFirstTimestamp() {\r\n        if (firstTimestamp === null) {\r\n            firstTimestamp = Date.now();\r\n        }\r\n        return firstTimestamp;\r\n    }\r\n\r\n    function getNewTimestamp() {\r\n        return Date.now();\r\n    }\r\n\r\n    return {\r\n        getFirstTimestamp,\r\n        getNewTimestamp,\r\n    };\r\n}\r\n\r\n// export const confDomain = \"\"\r\nexport const confDomain = \"https://timish.woa.com\"\r\n// domain: \"http://annualparty-server.annualpart-server.odprrp.woa.com\",\r\n// \"proxy\": \"http://localhost:8081\",\r\nexport const jsonFetch = async (\r\n    _config: Partial<RequestConfigType>,\r\n    query: any,\r\n    resHandler?: ResponseHandlerType\r\n) => {\r\n    const config = {\r\n        domain: confDomain,\r\n        url: \"\",\r\n        ..._config,\r\n    };\r\n    let endHeaders = {\r\n        \"Content-Type\": \"application/json\",\r\n        ..._config.headers,\r\n    };\r\n    try {\r\n        const response = await fetch(config.domain + config.url, {\r\n            method: \"POST\",\r\n            headers: endHeaders,\r\n            cache: \"no-store\",\r\n            signal: config.signal,\r\n            body: JSON.stringify(query),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n        const text = await response.text();\r\n\r\n        try {\r\n            const result = JSON.parse(text); // 使用JSON.parse来尝试解析文本\r\n            return result;\r\n        } catch (jsonError) {\r\n            // 如果解析失败，返回原始文本\r\n            return text;\r\n        }\r\n    } catch (error: any) {\r\n        // throw error;\r\n\r\n    } finally {\r\n        if (resHandler?.onFinally) resHandler.onFinally();\r\n    }\r\n};\r\n\r\nexport const getFetch = async (\r\n    _config: Partial<RequestConfigType>,\r\n    query: any,\r\n    resHandler?: ResponseHandlerType\r\n) => {\r\n    const config = {\r\n\r\n        domain: confDomain,\r\n        url: \"\",\r\n        ..._config,\r\n    };\r\n    let endHeaders = {\r\n        ..._config.headers,\r\n    };\r\n    try {\r\n        const response = await fetch(config.domain + config.url + \"?\" + paramsSting(query), {\r\n            method: \"GET\",\r\n            headers: endHeaders,\r\n            cache: \"no-store\",\r\n            signal: config.signal,\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n        const text = await response.text();\r\n\r\n        try {\r\n            const result = JSON.parse(text); // 使用JSON.parse来尝试解析文本\r\n            return result;\r\n        } catch (jsonError) {\r\n            return text;\r\n        }\r\n    } catch (error: any) {\r\n        if (resHandler?.onError) resHandler.onError();\r\n        // throw error;\r\n    } finally {\r\n        if (resHandler?.onFinally) resHandler.onFinally();\r\n    }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/circle.scss\";\r\n\r\ninterface CircularProgressBarProps {\r\n  totalDuration: number; // 总时长，单位：秒\r\n  radius: number; // 圆的半径\r\n}\r\n\r\nconst CircularProgressBar: React.FC<CircularProgressBarProps> = ({\r\n  totalDuration,\r\n  radius,\r\n}) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const intervalDuration = 100; // 每0.1秒更新一次\r\n  const strokeWidth = 10; // 线宽\r\n\r\n  useEffect(() => {\r\n    let intervalId: NodeJS.Timer | undefined;\r\n\r\n    if (progress < totalDuration) {\r\n      intervalId = setInterval(() => {\r\n        setProgress((prevProgress) => prevProgress + intervalDuration / 1000); // 每次增加0.1秒\r\n      }, intervalDuration);\r\n    } else {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [progress, totalDuration]);\r\n\r\n  // 计算当前进度百分比\r\n  const percentage = (progress / totalDuration) * 100;\r\n\r\n  // 计算圆环的 strokeDasharray\r\n  const circumference = 2 * Math.PI * radius; // 圆的周长\r\n  const offset = circumference - (percentage / 100) * circumference; // 计算偏移量\r\n\r\n  return (\r\n    <div className=\"circular-progress-container\">\r\n      <svg\r\n        className=\"circular-progress-svg\"\r\n        width={radius * 2 + strokeWidth} // 增加线宽\r\n        height={radius * 2 + strokeWidth} // 增加线宽\r\n        viewBox={`0 0 ${radius * 2 + strokeWidth} ${radius * 2 + strokeWidth}`} // 设置视口\r\n      >\r\n        <circle\r\n          cx={radius + strokeWidth / 2} // 圆心位置调整\r\n          cy={radius + strokeWidth / 2} // 圆心位置调整\r\n          r={radius}\r\n          fill=\"none\"\r\n          strokeWidth={strokeWidth}\r\n          stroke={percentage >= 80 ? \"#fb4a3e\" : \"#ffd843\"} // 背景圆环颜色\r\n        />\r\n        <circle\r\n          cx={radius + strokeWidth / 2} // 圆心位置调整\r\n          cy={radius + strokeWidth / 2} // 圆心位置调整\r\n          r={radius}\r\n          fill=\"none\"\r\n          strokeWidth={strokeWidth}\r\n          stroke={percentage >= 100 ? \"#d6e1f5\" : \"#d6e1f5\"} // 进度条颜色\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n          transform={`rotate(-90 ${radius + strokeWidth / 2} ${\r\n            radius + strokeWidth / 2\r\n          })`} // 旋转圆环\r\n          style={{ transition: \"stroke-dashoffset 0.1s linear\" }} // 平滑过渡\r\n        />\r\n      </svg>\r\n      <div className=\"timer\">\r\n        <div className=\"timer-text\">倒计时</div>\r\n        <div className=\"timer-number\">\r\n          {Math.ceil(totalDuration - progress)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircularProgressBar;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/dialog.scss\";\r\nconst MyDialog = ({ isOpen, onClose, message }: any) => {\r\n  useEffect(() => {\r\n    // 当对话框打开时，禁用页面滚动\r\n    if (isOpen) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n  }, [isOpen]);\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  // 点击背景或确认按钮时关闭对话框\r\n  const handleBackdropClick = () => {\r\n    onClose();\r\n  };\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"modal-backdrop\" onClick={handleBackdropClick}>\r\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-content\">\r\n          <p>{message}</p>\r\n          <button onClick={onClose}>确认</button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default MyDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/question.scss\";\r\nimport questionJsonFile from \"../json/question.json\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { getFetch, jsonFetch } from \"../utils/fetchRequest\";\r\nimport CircularProgressBar from \"../components/CircularProgressBar\";\r\nimport { motion } from \"framer-motion\";\r\nimport MyDialog from \"../components/MyDialog\";\r\ntype Props = {};\r\nconst questionJson = questionJsonFile as any;\r\nconst Question = (props: Props) => {\r\n  const { questionId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [optionList, setOptionList] = useState([] as any[]);\r\n  const [questionTitle, setQuestionTitle] = useState(\"\");\r\n  const [questionTag, setQuestionTag] = useState(0);\r\n  const [initDuration, setInitDuration] = useState(0); // 初始化状态\r\n  const [duration, setDuration] = useState(0); // 初始化状态\r\n  const [selectedOption, setSelectedOption] = useState(0); // 初始化状态\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [headerJsonMap, setHeaderJsonMap] = useState(\"\");\r\n  const toBegin = async (params: any) => {\r\n    const res = await jsonFetch(\r\n      {\r\n        headers: { headerJsonMap: headerJsonMap },\r\n        url: \"/begin\",\r\n        signal: params.signal,\r\n      },\r\n      questionTag,\r\n      {\r\n        onError: () => {\r\n          console.log(\"begin-error\");\r\n        },\r\n      }\r\n    );\r\n  };\r\n  const postOption = async (params: any) => {\r\n    if (!selectedOption || selectedOption <= 0) {\r\n      setModalOpen(true);\r\n      return;\r\n    }\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const userNameFromQuery = queryParams.get(\"userName\") || \"1\"; // 获取名为 'myParam' 的查询参数\r\n    const res = await jsonFetch(\r\n      {\r\n        headers: { headerJsonMap: headerJsonMap },\r\n        url: `/choose?userName=${userNameFromQuery}`,\r\n        signal: params.signal,\r\n      },\r\n      { questionID: questionTag, option: selectedOption },\r\n      {\r\n        onError: () => {},\r\n      }\r\n    );\r\n    navigate(\"/result\", { state: { resultParam: \"答题完成！\" } });\r\n    // if (res.code === 0) {\r\n\r\n    // }\r\n  };\r\n  const toSelectOption = async (params: any) => {\r\n    setSelectedOption(params);\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (const keying in questionJson) {\r\n      if (Object.prototype.hasOwnProperty.call(questionJson, keying)) {\r\n        const element = questionJson[keying] as any;\r\n        if (questionId?.includes(element.id)) {\r\n          setOptionList(element.options);\r\n          setQuestionTitle(element.title);\r\n          setQuestionTag(element.id);\r\n        }\r\n      }\r\n    }\r\n  }, [questionId]);\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    let codeFromQuery = queryParams.get(\"code\") || \"\"; // 获取名为 'myParam' 的查询参数\r\n    if (!codeFromQuery || codeFromQuery === \"\") {\r\n      codeFromQuery = localStorage.getItem(codeFromQuery) + \"\";\r\n    }\r\n    setHeaderJsonMap(codeFromQuery);\r\n    if (codeFromQuery) {\r\n      localStorage.setItem(\"codeFromQuery\", codeFromQuery);\r\n    }\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const { signal } = controller;\r\n    let timerId: any = null;\r\n    const getTime = async () => {\r\n      const res = await getFetch(\r\n        {\r\n          headers: { headerJsonMap: headerJsonMap },\r\n          url: \"/get/time\",\r\n          signal: signal,\r\n        },\r\n        { questionID: questionTag },\r\n        {\r\n          onError: () => {},\r\n        }\r\n      );\r\n      if (res > 0) {\r\n        setDuration(res);\r\n        setInitDuration(res);\r\n        clearInterval(timerId);\r\n        timerId = null;\r\n      }\r\n    };\r\n\r\n    if (questionTag > 0) {\r\n      timerId = setInterval(() => {\r\n        getTime();\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      controller.abort();\r\n      if (timerId) {\r\n        clearInterval(timerId);\r\n      }\r\n    };\r\n  }, [headerJsonMap, questionTag]);\r\n\r\n  useEffect(() => {\r\n    if (initDuration > 0) {\r\n      // 使用AbortController来提供一个取消定时器的机制\r\n      const controller = new AbortController();\r\n\r\n      const timerId = setTimeout(() => {\r\n        clearInterval(intervalId);\r\n        navigate(\"/result\", { state: { resultParam: \"您已放弃作答！\" } });\r\n      }, initDuration * 1000);\r\n\r\n      // 设置一个每秒执行的interval，减少duration\r\n      const intervalId = setInterval(() => {\r\n        setDuration((prevDuration) => {\r\n          if (prevDuration <= 0) {\r\n            // 如果duration已经为0或负数，清除interval并返回0\r\n            clearInterval(intervalId);\r\n            return 0;\r\n          }\r\n          return prevDuration - 1; // 否则，每秒减少1000毫秒\r\n        });\r\n      }, 1000);\r\n\r\n      // 组件卸载或duration改变时的清理函数\r\n      return () => {\r\n        clearTimeout(timerId);\r\n        clearInterval(intervalId);\r\n        controller.abort(); // 取消任何正在进行的操作\r\n      };\r\n    }\r\n  }, [navigate, initDuration]);\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const { signal } = controller;\r\n    const getOption = async () => {\r\n      const queryParams = new URLSearchParams(location.search);\r\n      const userNameFromQuery = queryParams.get(\"userName\") || \"\";\r\n      const res = await getFetch(\r\n        {\r\n          headers: { headerJsonMap: headerJsonMap },\r\n          url: \"/get/option\",\r\n          signal: signal,\r\n        },\r\n        { questionID: questionTag, userName: userNameFromQuery },\r\n        {\r\n          onError: () => {},\r\n        }\r\n      );\r\n      if (res > 0) {\r\n        setSelectedOption(res);\r\n      }\r\n    };\r\n    if (questionTag > 0 && initDuration > 0) {\r\n      getOption();\r\n    }\r\n  }, [headerJsonMap, initDuration, location.search, questionTag]);\r\n  return (\r\n    <main className=\"party-main\">\r\n      {initDuration > 0 && (\r\n        <motion.div\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 0.4 }}\r\n          className=\"party-bg\"\r\n        >\r\n          <div className=\"top-bg\"></div>\r\n          <div className=\"question-body\">\r\n            <div className=\"countdown-container\">\r\n              <CircularProgressBar\r\n                totalDuration={initDuration}\r\n                radius={50}\r\n              ></CircularProgressBar>\r\n            </div>\r\n\r\n            <section className=\"question-section\">\r\n              <p className=\"question-tag\">问题{questionTag}</p>\r\n              <p className=\"question-title\">{questionTitle}</p>\r\n            </section>\r\n            <section className=\"option-section\">\r\n              {optionList.map((item, index) => (\r\n                <div\r\n                  className={\r\n                    selectedOption === index + 1\r\n                      ? \"option-button selected\"\r\n                      : \"option-button\"\r\n                  }\r\n                  key={JSON.stringify(item)}\r\n                  onClick={() => {\r\n                    toSelectOption(index + 1);\r\n                  }}\r\n                >\r\n                  <div className=\"option-idx\">{item?.idx}</div>\r\n                  <span className=\"option-name\">{item?.name}</span>\r\n                </div>\r\n              ))}\r\n            </section>\r\n          </div>\r\n          <div className=\"submit-button-container\">\r\n            <button\r\n              className={\r\n                selectedOption > 0 ? \"submit-button selected\" : \"submit-button\"\r\n              }\r\n              onClick={postOption}\r\n            >\r\n              提交\r\n            </button>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n      {initDuration <= 0 && (\r\n        <div className=\"wait-bg\">\r\n          <div className=\"party-center\">\r\n            <div onClick={toBegin}>等待作答</div>\r\n          </div>\r\n          <p className=\"wait-text\">请等待扫描下一题</p>\r\n        </div>\r\n      )}\r\n      {isModalOpen && (\r\n        <MyDialog\r\n          isOpen={isModalOpen}\r\n          onClose={() => {\r\n            setModalOpen(false);\r\n          }}\r\n          message=\"请先选择一个选项！\"\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n"],"names":["confDomain","jsonFetch","async","_config","query","resHandler","config","domain","url","endHeaders","headers","response","fetch","method","cache","signal","body","JSON","stringify","ok","Error","text","parse","jsonError","error","onFinally","getFetch","params","sortedParams","Object","keys","sort","reduce","result","key","map","join","paramsSting","onError","_ref","totalDuration","radius","progress","setProgress","useState","strokeWidth","useEffect","intervalId","setInterval","prevProgress","intervalDuration","clearInterval","percentage","circumference","Math","PI","offset","_jsxs","className","children","width","height","viewBox","_jsx","cx","cy","r","fill","stroke","strokeDasharray","strokeDashoffset","transform","style","transition","ceil","isOpen","onClose","message","document","overflow","ReactDOM","onClick","handleBackdropClick","e","stopPropagation","questionJson","questionJsonFile","props","questionId","useParams","navigate","useNavigate","location","useLocation","optionList","setOptionList","questionTitle","setQuestionTitle","questionTag","setQuestionTag","initDuration","setInitDuration","duration","setDuration","selectedOption","setSelectedOption","isModalOpen","setModalOpen","headerJsonMap","setHeaderJsonMap","keying","prototype","hasOwnProperty","call","element","includes","id","options","title","codeFromQuery","URLSearchParams","search","get","localStorage","getItem","setItem","controller","AbortController","timerId","res","questionID","getTime","abort","setTimeout","state","resultParam","prevDuration","clearTimeout","userNameFromQuery","userName","getOption","motion","div","initial","opacity","animate","exit","CircularProgressBar","item","index","toSelectOption","idx","name","option","console","log","MyDialog"],"sourceRoot":""}