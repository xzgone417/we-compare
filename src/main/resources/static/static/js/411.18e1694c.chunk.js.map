{"version":3,"file":"static/js/411.18e1694c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.13.5\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    resolveElements(elementOrSelector).forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return () => gestureAbortController.abort();\n}\n\nexport { hover };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from 'motion-dom';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.13.5\", `Attempting to mix Motion versions ${nextValue.version} with 11.13.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","filterEvents","event","pointerType","hover","elementOrSelector","onHoverStart","gestureAbortController","AbortController","eventOptions","passive","signal","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","scope","selectorCache","elements","querySelectorAll","resolveElements","abort","isPrimaryPointer","button","isPrimary","extractEventInfo","point","pageX","pageY","addDomEvent","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","createDomVisualElement"],"sourceRoot":""}